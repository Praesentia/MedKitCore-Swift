/*
 -----------------------------------------------------------------------------
 This source file is part of MedKitCore.
 
 Copyright 2016-2017 Jon Griffeth
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 -----------------------------------------------------------------------------
 */


import Foundation;


/**
 ProtocolStack observer protocol.
 
 A ProtocolStack observer may be used to handle life-cycle events generated by
 a ProtocolStack instance.
 */
public protocol ProtocolStackDelegate: class {
    
    /**
     ProtocolStack did initialize.
     
     This will be the first call received by the delegate.  This method will be
     called directly, after the protocol has initialized in response to the
     start(_:completionHandler:) method being called.
     
     - Parameters:
        - stack: Caller
        - error: Nil if successful.  Otherwise, the error that prevented the
                 stack from initializing properly.
     */
    func protocolStackDidInitialize(_ stack: ProtocolStack, with error: Error?);
    
    /**
     ProtocolStack did close.
     
     No other calls will be received after this call has been made.  It is
     always dispatched asynchronously, bracketing any previously dispatched
     calls and ensure that they have completed prior to this call being
     received.
     
     - Parameters:
        - stack:  Caller
        - reason: Nil for normal shutdowns.  Otherwise, the error leading to
                  the stack being closed.
     */
    func protocolStackDidClose(_ stack: ProtocolStack, reason: Error?);
    
}


// End of File
